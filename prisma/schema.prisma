// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  email       String        @unique
  password    String
  role        String        @default("user")
  company     Company?
  Review      Review[]
  Application Application[]
}

model Company {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  ownerId     String @unique @db.ObjectId
  name        String
  description String
  owner       User   @relation(fields: [ownerId], references: [id])
  jobs        Job[]
}

model Job {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  location     String
  salary       Int
  job_category String @default("fulltime")
  job_type     String @default("on-site")
  companyId    String @db.ObjectId

  company Company @relation(fields: [companyId], references: [id])
}

model Review {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  authorId  String @db.ObjectId
  author    User   @relation(fields: [authorId], references: [id])
  companyId String
}

model Application {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  jobId String @db.ObjectId
}
